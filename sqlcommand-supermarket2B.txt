-- -- DROP TABLE STORES;
-- -- DROP TABLE ADMIN_USERS;
-- CREATE TABLE STORES
-- (STORE_ID BIGINT NOT NULL
-- GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
-- CONSTRAINT STORES_PK PRIMARY KEY,
-- STORE_Name VARCHAR(20) NOT NULL,
-- STORE_Address VARCHAR(50)
-- );
-- 
-- CREATE TABLE PRODUCTS
-- (PRODUCT_ID BIGINT NOT NULL
-- GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
-- CONSTRAINT PRODUCTS_PK PRIMARY KEY,
-- description VARCHAR(30) NOT NULL,
-- IMG_URL VARCHAR(200),
-- PRICE DOUBLE NOT NULL
-- );
-- 
-- CREATE TABLE ADMIN_USERS
-- (ADMIN_ID BIGINT NOT NULL
-- GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
-- CONSTRAINT ADMIN_USERS_PK PRIMARY KEY,
-- Name VARCHAR(30) NOT NULL,
-- U_Name VARCHAR(20) NOT NULL,
-- Password VARCHAR(200) NOT NULL,
-- Address VARCHAR(50),
-- STORE_ID BIGINT NOT NULL
-- CONSTRAINT STORE_ID_FK REFERENCES STORES(STORE_ID)
-- ON DELETE CASCADE
-- );
-- 
-- CREATE TABLE STOCK
-- (STORE_ID BIGINT NOT NULL
-- CONSTRAINT STOCK_STORE_ID_FK REFERENCES STORES(STORE_ID)
-- ON DELETE CASCADE,
-- PRODUCT_ID BIGINT NOT NULL
-- CONSTRAINT STOTCK_PRODUCT_FK REFERENCES PRODUCTS(PRODUCT_ID)
-- ON DELETE CASCADE,
-- PRIMARY KEY(STORE_ID, PRODUCT_ID),
-- QUANTITY INT NOT NULL
-- );


-- INSERT INTO STORES( STORE_NAME, STORE_ADDRESS )
-- VALUES ('Sansbury NewCastle', 'Liverpool Rd, Newcastle ST5 2AF');
-- INSERT INTO STORES( STORE_NAME, STORE_ADDRESS )
-- VALUES ('Asda Tunstall', 'Scotia Rd, Stoke-on-Trent ST6 6AT');
-- INSERT INTO STORES( STORE_NAME, STORE_ADDRESS )
-- VALUES ('Tesco Hanley', 'Clough St, Stoke-on-Trent ST1 4LS');

-- INSERT INTO ADMIN_USERS( NAME, U_NAME, PASSWORD, ADDRESS , STORE_ID )
-- VALUES ('John Snow', 'jbolton', 'jb1', '98 King St, Manchester M2 4WU, UK', 1 );
-- INSERT INTO ADMIN_USERS( NAME, U_NAME, PASSWORD, ADDRESS , STORE_ID )
-- VALUES ('Daenerys Targaryen', 'amarie', 'am1', 'Glebedale Road, Fenton Stoke on Trent ST4 3AQ', 1 );
-- INSERT INTO ADMIN_USERS( NAME, U_NAME, PASSWORD, ADDRESS , STORE_ID )
-- VALUES ('Arya Stark', 'astark', 'ast4', '5 Portland St Stoke-on-Trent ST1 5HZ', 2 );
-- INSERT INTO ADMIN_USERS( NAME, U_NAME, PASSWORD, ADDRESS , STORE_ID )
-- VALUES ('Gendry Baratheon', 'gbara', 'gba3', '12 Bethesda St Stoke-on-Trent ST1 1QF', 2 );
INSERT INTO ADMIN_USERS( NAME, U_NAME, PASSWORD, ADDRESS , STORE_ID )
VALUES ('Ramsay Bolton', 'rbolton', 'rbol1', '38 Hazelhurst St Stoke-on-Trent ST1 3HF', 3 );
-- INSERT INTO ADMIN_USERS( NAME, U_NAME, PASSWORD, ADDRESS , STORE_ID )
-- VALUES ('Theon Greyjoy', 'tgrey','tgrey1', '41 Warrington Rd Stoke-on-TrentST1 3JQ', 3 );


--UPDATE STOCK------------------------------
-- INSERT INTO STOCK( STORE_ID, PRODUCT_ID , QUANTITY )
--  VALUES (2, 102, 15 );

 --UPDATE STOCK  SET QUANTiTY = 35 WHERE PRODUCT_ID = 102 AND STORE_ID = 2

-- SELECT STORES.STORE_NAME,
--        PRODUCTS.DESCRIPTION,
--        
--        STOCK.QUANTITY 
-- FROM STOCK
-- JOIN PRODUCTS
-- ON STOCK.PRODUCT_ID = PRODUCTS.PRODUCT_ID
-- JOIN STORES 
-- ON STORES.STORE_ID = STOCK.STORE_ID
-- WHERE STORES.STORE_ID = 1 AND PRODUCTS.PRODUCT_ID = 102
--UPDATE STOCK------------------------------



 CREATE TABLE USERS
(USER_ID BIGINT NOT NULL
GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
CONSTRAINT USERS_PK PRIMARY KEY,
Name VARCHAR(30) NOT NULL,
U_Name VARCHAR(20) NOT NULL UNIQUE,
Password VARCHAR(100) NOT NULL,
Address VARCHAR(100)
);

CREATE TABLE ORDERS
(ORDER_ID BIGINT NOT NULL
GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
CONSTRAINT ORDERS_PK PRIMARY KEY,
DATE_TR TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

USER_ID BIGINT NOT NULL
CONSTRAINT USER_ID_FK REFERENCES USERS(USER_ID)
ON DELETE CASCADE
);

CREATE TABLE ORDER_DETAIL (
ORDER_DETAIL_ID BIGINT  GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)  NOT NULL ,
 DESCRIPTION VARCHAR(50) NOT NULL,
 QUANTITY INTEGER NOT NULL,
 IMG_URL VARCHAR(100),
 PRICE DECIMAL(10,2) NOT NULL,
ORDER_ID BIGINT NOT NULL
CONSTRAINT ORDER_ID_FK REFERENCES ORDERS(ORDER_ID),


  PRIMARY KEY (ORDER_DETAIL_ID));